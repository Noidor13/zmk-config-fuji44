/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/pointing.h>

/ {
    combos {
        compatible = "zmk,combos";

        combo_esc {
            timeout-ms = <50>;
            key-positions = <0 1>;
            bindings = <&kp ESC>;
        };
    };

    behaviors {
        ss_hs_modmorph: ss_hs_modmorph {
            compatible = "zmk,behavior-mod-morph";
            label = "SS_HS_MODMORPH";
            bindings = <&kp M>, <&kp RIGHT_BRACKET>;

            #binding-cells = <0>;
            mods = <(MOD_LSFT|MOD_RSFT)>;
        };

        kh_hs_tapdance: kh_hs_tapdance {
            compatible = "zmk,behavior-tap-dance";
            label = "KH_HS_TAPDANCE";
            #binding-cells = <0>;
            tapping-term-ms = <200>;
            bindings = <&kp LEFT_BRACKET>, <&kp RIGHT_BRACKET>;
        };

        hrm: hrm {
            compatible = "zmk,behavior-hold-tap";
            #binding-cells = <2>;
            flavor = "tap-preferred";
            tapping-term-ms = <200>;
            quick-tap-ms = <200>;
            require-prior-idle-ms = <125>;
            bindings = <&kp>, <&kp>;
        };

        mouse_key_press: mouse_key_press {
            compatible = "zmk,behavior-mouse-key-press";
            label = "MOUSE_KEY_PRESS";
            #binding-cells = <1>;
        };

        sensor_rotate: sensor_rotate {
            compatible = "zmk,behavior-sensor-rotate";
            label = "SENSOR_ROTATE";
            #sensor-binding-cells = <0>;
            bindings = <&none>, <&none>;
        };
    };

    macros {
        m7: m7 {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp LS(LC(UP)) &kp LA(T)>;
            label = "M7";
        };

        m9: m9 {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kt LALT &kp KP_NUMBER_4 &kp KP_NUMBER_4 &kt LEFT_ALT>;
            label = "M9";
        };

        m16: m16 {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kt LEFT_WIN &kp P &kt LEFT_WIN>;
            label = "M16";
        };

        m4: m4 {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kt LEFT_CONTROL &kp B &kp U &kt LEFT_CONTROL>;
            label = "M4";
        };

        m10: m10 {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kt LALT &kp KP_NUMBER_4 &kp KP_NUMBER_7 &kt LEFT_ALT>;
            label = "M10";
        };

        m11: m11 {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kt LALT &kp KP_NUMBER_1 &kp KP_NUMBER_2 &kp KP_NUMBER_6 &kt LEFT_ALT>;
            label = "M11";
        };

        m14: m14 {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp LC(C) &kp LA(TAB) &kp LEFT_SHIFT &kp LEFT_SHIFT &kp RCTRL &kp RCTRL &kp LEFT_SHIFT &kp LEFT_SHIFT &kp RCTRL &kp RCTRL &kp LEFT_SHIFT &kp LEFT_SHIFT &kp LEFT_SHIFT &kp LEFT_CONTROL &kp LEFT_CONTROL &kp LEFT_SHIFT &kp LC(F) &kp LEFT_SHIFT &kp LEFT_SHIFT &kp LEFT_SHIFT &kp LEFT_CONTROL &kp LEFT_CONTROL &kp LEFT_SHIFT &kp LC(V)>;
            label = "M14";
        };

        m15: m15 {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kt LALT &kp KP_NUMBER_6 &kp KP_NUMBER_2 &kt LEFT_ALT>;
            label = "M15";
        };

        m8: m8 {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kt LALT &kp KP_NUMBER_3 &kp KP_NUMBER_5 &kt LEFT_ALT>;
            label = "M8";
        };
    };

    keymap {
        compatible = "zmk,keymap";

        def {
            bindings = <
&kp LALT   &kp Q  &kp W          &kp E  &kp R      &kp T    &kp Y     &kp U  &kp I      &kp O        &kp P     &kp RBKT
&kp LCTRL  &kp A  &kp S          &kp D  &kp F      &kp G    &kp H     &kp J  &kp K      &kp L        &kp SEMI  &kp SQT
&kp LSHFT  &kp Z  &kp X          &kp C  &kp V      &kp B    &kp N     &kp M  &kp COMMA  &kp DOT      &kp FSLH  &kp RSHFT
                  &kp PAGE_DOWN  &mo 3  &kp SPACE  &mo 1    &kp BSPC  &mo 2  &kp ENTER  &kp PAGE_UP
            >;
        };

        nav {
            bindings = <
&kp ESC   &kp LC(PAGE_DOWN)  &kp LC(LBKT)  &kp RET    &kp LC(RBKT)     &kp BSPC     &msc SCRL_UP          &mkp LCLK             &mmv MOVE_UP    &mkp RCLK        &trans  &kp PG_UP
&m14      &kp LG(M)          &m9           &kp LALT   &kp TAB          &kp DEL      &msc SCRL_DOWN        &mmv MOVE_LEFT        &mmv MOVE_DOWN  &mmv MOVE_RIGHT  &trans  &kp PAGE_DOWN
&kp CAPS  &kp LC(Z)          &kp LC(X)     &kp LC(C)  &kp LC(V)        &kp LC(B)    &kp LS(LC(NUMBER_6))  &kp LS(LC(NUMBER_4))  &m8             &m10             &m15    &trans
                             &trans        &trans     &kp PRINTSCREEN  &trans       &trans                &trans                &trans          &trans
            >;
        };

        sys {
            bindings = <
&kp GRAVE  &kp LS(LC(UP))    &kp HOME          &kp UP    &kp END            &trans    &kp EQUAL  &kp N7  &kp N8  &kp N9  &kp N0    &m7
&m11       &kp LS(LC(DOWN))  &kp LEFT          &kp DOWN  &kp RIGHT          &trans    &kp PLUS   &kp N4  &kp N5  &kp N6  &kp LBKT  &kp LA(G)
&trans     &trans            &kp LS(LC(LEFT))  &trans    &kp LS(LC(RIGHT))  &m4       &kp MINUS  &kp N1  &kp N2  &kp N3  &trans    &m9
                             &trans            &trans    &trans             &trans    &trans     &trans  &trans  &trans
            >;
        };

        num {
            bindings = <
&trans            &trans  &kp LG(P)  &trans  &trans          &kp INS           &trans  &kp F7  &kp F8  &kp F9  &kp F10  &trans
&kp LC(NUMBER_1)  &trans  &trans     &trans  &trans          &trans            &trans  &kp F4  &kp F5  &kp F6  &kp F11  &trans
&trans            &mo 4   &trans     &trans  &kp SCROLLLOCK  &kp KP_NUMLOCK    &trans  &kp F1  &kp F2  &kp F3  &kp F12  &trans
                          &trans     &trans  &trans          &trans            &trans  &trans  &trans  &trans
            >;
        };

        layer_4 {
            bindings = <
&trans  &trans  &trans  &trans  &trans  &trans    &bt BT_SEL 0  &bt BT_SEL 1  &bt BT_SEL 2  &bt BT_SEL 3  &bt BT_SEL 4  &bt BT_CLR
&trans  &trans  &trans  &trans  &trans  &trans    &trans        &trans        &trans        &trans        &trans        &bt BT_CLR_ALL
&trans  &trans  &trans  &trans  &trans  &trans    &bt BT_PRV    &bt BT_NXT    &trans        &trans        &trans        &trans
                &trans  &trans  &trans  &trans    &trans        &trans        &trans        &trans
            >;
        };
    };
};
